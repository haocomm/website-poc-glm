{"file":"chat-CTElLWzL.js","mappings":"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","names":["_ssrRenderAttrs","_mergeProps","_push","_parent","_ssrRenderComponent","_createVNode","_ssrRenderList","_unref","_ssrInterpolate","_","_scopeId"],"sources":["../../../../pages/chat.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n    <div class=\"container mx-auto px-4 py-8\">\n      <div class=\"grid grid-cols-1 lg:grid-cols-4 gap-6 h-screen\">\n        <!-- Sidebar with rooms -->\n        <div class=\"lg:col-span-1 bg-white dark:bg-gray-800 rounded-lg shadow p-4\">\n          <div class=\"flex justify-between items-center mb-4\">\n            <h3 class=\"text-lg font-semibold text-gray-900 dark:text-white\">\n              Chat Rooms\n            </h3>\n            <UButton\n              size=\"sm\"\n              color=\"primary\"\n              variant=\"soft\"\n              @click=\"showCreateRoom = true\"\n            >\n              <Icon name=\"i-heroicons-plus\" />\n            </UButton>\n          </div>\n\n          <div class=\"space-y-2\">\n            <div\n              v-for=\"room in rooms\"\n              :key=\"room._id\"\n              @click=\"joinRoom(room._id)\"\n              :class=\"[\n                'p-3 rounded-lg cursor-pointer transition-colors',\n                currentRoom === room._id\n                  ? 'bg-primary-100 dark:bg-primary-900'\n                  : 'hover:bg-gray-100 dark:hover:bg-gray-700'\n              ]\"\n            >\n              <div class=\"font-medium text-gray-900 dark:text-white\">\n                {{ room.name }}\n              </div>\n              <div class=\"text-sm text-gray-500 dark:text-gray-400\">\n                {{ room.members?.length || 0 }} members\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Main chat area -->\n        <div class=\"lg:col-span-3 bg-white dark:bg-gray-800 rounded-lg shadow flex flex-col\">\n          <div v-if=\"!currentRoom\" class=\"flex-1 flex items-center justify-center\">\n            <div class=\"text-center\">\n              <h3 class=\"text-xl font-semibold text-gray-900 dark:text-white mb-2\">\n                Welcome to Chat App\n              </h3>\n              <p class=\"text-gray-600 dark:text-gray-400\">\n                Select a room from the sidebar to start chatting\n              </p>\n            </div>\n          </div>\n\n          <div v-else class=\"flex-1 flex flex-col\">\n            <!-- Chat header -->\n            <div class=\"p-4 border-b border-gray-200 dark:border-gray-700\">\n              <h3 class=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                {{ currentRoomName }}\n              </h3>\n              <div class=\"text-sm text-gray-500 dark:text-gray-400\">\n                {{ onlineUsers.length }} users online\n              </div>\n            </div>\n\n            <!-- Messages area -->\n            <div class=\"flex-1 p-4 overflow-y-auto chat-messages\">\n              <div\n                v-for=\"message in messages\"\n                :key=\"message.id\"\n                class=\"mb-4\"\n              >\n                <div class=\"flex items-start space-x-3\">\n                  <div class=\"flex-shrink-0\">\n                    <div class=\"w-8 h-8 bg-primary-500 rounded-full flex items-center justify-center\">\n                      <span class=\"text-white text-sm font-medium\">\n                        {{ message.username?.[0]?.toUpperCase() }}\n                      </span>\n                    </div>\n                  </div>\n                  <div class=\"flex-1\">\n                    <div class=\"flex items-center space-x-2\">\n                      <span class=\"font-medium text-gray-900 dark:text-white\">\n                        {{ message.username }}\n                      </span>\n                      <span class=\"text-xs text-gray-500 dark:text-gray-400\">\n                        {{ formatTime(message.timestamp) }}\n                      </span>\n                    </div>\n                    <div class=\"text-gray-700 dark:text-gray-300\">\n                      {{ message.content }}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <!-- Message input -->\n            <div class=\"p-4 border-t border-gray-200 dark:border-gray-700\">\n              <div class=\"flex space-x-4\">\n                <UInput\n                  v-model=\"messageInput\"\n                  placeholder=\"Type your message...\"\n                  @keyup.enter=\"sendMessage\"\n                  class=\"flex-1\"\n                />\n                <UButton\n                  @click=\"sendMessage\"\n                  color=\"primary\"\n                  variant=\"solid\"\n                >\n                  Send\n                </UButton>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Create Room Modal -->\n    <UModal v-model=\"showCreateRoom\">\n      <UCard>\n        <template #header>\n          <h3 class=\"text-lg font-semibold\">Create New Room</h3>\n        </template>\n\n        <UForm\n          :state=\"roomForm\"\n          @submit=\"createRoom\"\n          class=\"space-y-4\"\n        >\n          <UFormGroup label=\"Room Name\" name=\"name\">\n            <UInput\n              v-model=\"roomForm.name\"\n              placeholder=\"Enter room name\"\n              required\n            />\n          </UFormGroup>\n\n          <UFormGroup label=\"Description\" name=\"description\">\n            <UTextarea\n              v-model=\"roomForm.description\"\n              placeholder=\"Enter room description (optional)\"\n            />\n          </UFormGroup>\n\n          <div class=\"flex justify-end space-x-3\">\n            <UButton\n              @click=\"showCreateRoom = false\"\n              variant=\"soft\"\n            >\n              Cancel\n            </UButton>\n            <UButton\n              type=\"submit\"\n              color=\"primary\"\n              :loading=\"creatingRoom\"\n            >\n              Create Room\n            </UButton>\n          </div>\n        </UForm>\n      </UCard>\n    </UModal>\n  </div>\n</template>\n\n<script setup>\nconst router = useRouter()\n\n// State\nconst rooms = ref([])\nconst currentRoom = ref(null)\nconst currentRoomName = ref('')\nconst messages = ref([])\nconst messageInput = ref('')\nconst onlineUsers = ref([])\nconst showCreateRoom = ref(false)\nconst creatingRoom = ref(false)\n\n// Form for creating room\nconst roomForm = reactive({\n  name: '',\n  description: ''\n})\n\n// Socket connection\nlet socket = null\n\n// Check authentication\nonMounted(async () => {\n  const token = localStorage.getItem('auth_token')\n  if (!token) {\n    await router.push('/auth/login')\n    return\n  }\n\n  await loadRooms()\n  initializeSocket()\n})\n\nasync function loadRooms() {\n  try {\n    const token = localStorage.getItem('auth_token')\n    rooms.value = await $fetch('/api/chat/rooms', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      baseURL: 'http://localhost:3001'\n    })\n  } catch (error) {\n    console.error('Failed to load rooms:', error)\n  }\n}\n\nfunction initializeSocket() {\n  const token = localStorage.getItem('auth_token')\n\n  socket = io('http://localhost:3001', {\n    auth: {\n      token\n    }\n  })\n\n  socket.on('connect', () => {\n    console.log('Connected to socket server')\n  })\n\n  socket.on('new-message', (message) => {\n    messages.value.push(message)\n  })\n\n  socket.on('user-joined', (data) => {\n    console.log('User joined:', data)\n  })\n\n  socket.on('user-left', (data) => {\n    console.log('User left:', data)\n  })\n}\n\nasync function joinRoom(roomId) {\n  currentRoom.value = roomId\n  const room = rooms.value.find(r => r._id === roomId)\n  currentRoomName.value = room.name\n\n  if (socket) {\n    socket.emit('join-room', roomId)\n  }\n\n  await loadMessages(roomId)\n}\n\nasync function loadMessages(roomId) {\n  try {\n    const token = localStorage.getItem('auth_token')\n    messages.value = await $fetch(`/api/chat/rooms/${roomId}/messages`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      baseURL: 'http://localhost:3001'\n    })\n  } catch (error) {\n    console.error('Failed to load messages:', error)\n  }\n}\n\nfunction sendMessage() {\n  if (!messageInput.value.trim() || !socket) return\n\n  socket.emit('send-message', {\n    roomId: currentRoom.value,\n    content: messageInput.value.trim(),\n    type: 'text'\n  })\n\n  messageInput.value = ''\n}\n\nasync function createRoom() {\n  creatingRoom.value = true\n\n  try {\n    const token = localStorage.getItem('auth_token')\n    const newRoom = await $fetch('/api/chat/rooms', {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      body: roomForm,\n      baseURL: 'http://localhost:3001'\n    })\n\n    rooms.value.push(newRoom.room)\n    showCreateRoom.value = false\n\n    // Reset form\n    roomForm.name = ''\n    roomForm.description = ''\n  } catch (error) {\n    console.error('Failed to create room:', error)\n  } finally {\n    creatingRoom.value = false\n  }\n}\n\nfunction formatTime(timestamp) {\n  return new Date(timestamp).toLocaleTimeString()\n}\n\n// Cleanup on unmount\nonUnmounted(() => {\n  if (socket) {\n    socket.disconnect()\n  }\n})\n\n// SEO Meta\nuseHead({\n  title: 'Chat - Chat App',\n  meta: [\n    { name: 'description', content: 'Join real-time conversations' }\n  ]\n})\n</script>"],"version":3}